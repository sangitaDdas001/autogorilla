<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class SupplierModel extends CI_Model {

	public function getVendorDetails($limit = 10, $offset = 0, $search=''){
		$this->db->select("c_per.company_id");
		$this->db->from('company_permission_tbl c_per');
		$this->db->where(array('c_per.admin_user_id' => $_SESSION['adminsessiondetails']['id']));
		$query = $this->db->get();
        $data  = $query->result_array();
        
        if(!empty($data) && $_SESSION['adminsessiondetails']['id'] != 1){
        	$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.autogorilla_verified, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at, IF(v.status = 'A','Active','Inactive') AS `status`,v.id,CASE WHEN v.approved_status = '1' THEN 'Approved' WHEN v.approved_status = '2' THEN 'Reject' ELSE 'Not Approved' END AS `approved_status`, v.password, v.featured_company, v.decript_password,round(AVG(coalesce(v_sc.total_score,0))) as cat_avscore,group_concat(distinct(se_pack.service_plan)) as service_plan ",FALSE);
			$this->db->from('vendor_info v');
			$this->db->join('vendor_product_score_table v_sc','v_sc.vendor_id=v.id','left');
			$this->db->join('vendor_service_package_list v_service_p','(v_service_p.vendor_id = v.id AND v_service_p.status = "A")','left');
			$this->db->join('service_package se_pack','se_pack.id = v_service_p.service_package_id','left');
			$this->db->join('company_permission_tbl c_p','c_p.company_id = v.id','left');
			$this->db->where(array('v.status !='=>'D','v.otp_varify'=>1 ,'c_p.admin_user_id'=>$_SESSION['adminsessiondetails']['id']));
			
			if (!empty($search)) {
	 			if($search == 'Approved' || $search == 'approved'){
					$this->db->like('v.approved_status', 1, 'both');
	 			}else if($search == 'Not Approved' || $search == 'not approved' || $search == 'not'){
	 				$this->db->like('v.approved_status', 0, 'both');
	 			} else {
	 				$this->db->group_start();
	 				$this->db->like('v.email', $search, 'both');
	 				$this->db->or_like('v.company_name', $search, 'both');
	 				$this->db->or_like('se_pack.service_plan', $search, 'both');
	 				$this->db->group_end();
	 			}
			}
			$this->db->group_by('v.id');
			$this->db->order_by('v.id','DESC');
			$this->db->limit($limit,$offset);
			$query = $this->db->get();
		
	        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
	        $data['total_count'] = $countQuery->row()->Count;
	        $data['fetch_count'] = $query->num_rows();
	        $data['fetch_data']  = $query->result_array();
	        foreach ($data['fetch_data'] as $key => $value) {
	        	$data['fetch_data'][$key]['sl_no'] = $key+1;
	        }
	        return $data;
        
        } else {
        	$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%Y %h:%i:%s %p') as created_at, IF(v.status = 'A','Active','Inactive') AS `status`,v.id,CASE WHEN v.approved_status = '1' THEN 'Approved' WHEN v.approved_status = '2' THEN 'Reject' ELSE 'Not Approved' END AS `approved_status`, v.password, v.featured_company,v.autogorilla_verified, v.decript_password,round(AVG(coalesce(v_sc.total_score,0))) as cat_avscore, group_concat(distinct(se_pack.service_plan)) as service_plan",FALSE);
			$this->db->from('vendor_info v');
			$this->db->join('vendor_product_score_table v_sc','v_sc.vendor_id=v.id','left');
			$this->db->join('vendor_service_package_list v_service_p','(v_service_p.vendor_id = v.id AND v_service_p.status = "A")','left');
			$this->db->join('service_package se_pack','se_pack.id = v_service_p.service_package_id','left');
			$this->db->where(array('v.status !='=>'D','v.otp_varify'=>1));

			if (!empty($search)) {
	 			if($search == 'Approved' || $search == 'approved'){
					$this->db->like('v.approved_status', 1, 'both');
	 			} else if($search == 'Not Approved' || $search == 'not approved' || $search == 'not'){
	 				$this->db->like('v.approved_status', 0, 'both');
	 			} else {
	 				$this->db->group_start();
	 				$this->db->like('v.email', $search, 'both');
	 				$this->db->or_like('v.company_name', $search, 'both');
	 				$this->db->or_like('se_pack.service_plan', $search, 'both');
	 				$this->db->group_end();
	 			}
			}
			$this->db->group_by('v.id');
			$this->db->order_by('v.id','DESC');
			$this->db->limit($limit,$offset);
			$query = $this->db->get();
	        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
	        $data['total_count'] = $countQuery->row()->Count;
	        $data['fetch_count'] = $query->num_rows();
	        $data['fetch_data']  = $query->result_array();
	        foreach ($data['fetch_data'] as $key => $value) {
	        	$data['fetch_data'][$key]['sl_no'] = $key+1;
	        }
	        return $data;
        }
	}

	public function getapprovedVendorDetails($limit = 10, $offset = 0, $search=''){
			$this->db->select("c_per.company_id");
			$this->db->from('company_permission_tbl c_per');
			$this->db->where(array('c_per.admin_user_id' => $_SESSION['adminsessiondetails']['id']));
			$query = $this->db->get();
	        $data  = $query->result_array();
	        if(!empty($data) && $_SESSION['adminsessiondetails']['id'] != 1) { 
				$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at, IF(v.status = 'A','Active','Inactive') AS `status`,v.id,CASE WHEN v.approved_status = '1' THEN 'Approved' WHEN v.approved_status = '2' THEN 'Reject' ELSE 'Not Approved' END AS `approved_status`, v.password, v.featured_company, v.autogorilla_verified, v.decript_password,round(AVG(coalesce(v_sc.total_score,0))) as cat_avscore,group_concat(distinct(se_pack.service_plan)) as service_plan ",FALSE);
				$this->db->from('vendor_info v');
				$this->db->join('vendor_product_score_table v_sc','v_sc.vendor_id=v.id','left');
				$this->db->join('vendor_service_package_list v_service_p','(v_service_p.vendor_id = v.id AND v_service_p.status = "A")','left');
				$this->db->join('service_package se_pack','se_pack.id = v_service_p.service_package_id','left');
				$this->db->join('company_permission_tbl c_p','c_p.company_id = v.id','left');
				$this->db->where(array('v.status !='=>'D','v.approved_status'=>1, 'c_p.admin_user_id'=>$_SESSION['adminsessiondetails']['id']));
				
				if (!empty($search)) {
		 			if($search == 'Approved' || $search == 'approved'){
						$this->db->like('v.approved_status', 1, 'both');
		 			}else if($search == 'Not Approved' || $search == 'not approved' || $search == 'not'){
		 				$this->db->like('v.approved_status', 0, 'both');
		 			} else {
		 				$this->db->group_start();
		 				$this->db->like('v.email', $search, 'both');
		 				$this->db->or_like('v.company_name', $search, 'both');
		 				$this->db->or_like('se_pack.service_plan', $search, 'both');
		 				$this->db->group_end();
		 			}
				}
				$this->db->group_by('v.id');
				$this->db->order_by('v.id','DESC');
				$this->db->limit($limit,$offset);
				$query = $this->db->get();
				
		        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
		        $data['total_count'] = $countQuery->row()->Count;
		        $data['fetch_count'] = $query->num_rows();
		        $data['fetch_data']  = $query->result_array();
		        foreach ($data['fetch_data'] as $key => $value) {
	        		$data['fetch_data'][$key]['sl_no'] = $key+1;
	        	}
		        return $data;
	    	} else {
	    		$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at, IF(v.status = 'A','Active','Inactive') AS `status`,v.id,CASE WHEN v.approved_status = '1' THEN 'Approved' WHEN v.approved_status = '2' THEN 'Reject' ELSE 'Not Approved' END AS `approved_status`, v.password, v.featured_company, v.autogorilla_verified,v.decript_password,round(AVG(coalesce(v_sc.total_score,0))) as cat_avscore,group_concat(distinct(se_pack.service_plan)) as service_plan ",FALSE);
				$this->db->from('vendor_info v');
				$this->db->join('vendor_product_score_table v_sc','v_sc.vendor_id=v.id','left');
				$this->db->join('vendor_service_package_list v_service_p','(v_service_p.vendor_id = v.id AND v_service_p.status = "A")','left');
				$this->db->join('service_package se_pack','se_pack.id = v_service_p.service_package_id','left');
				$this->db->where(array('v.status !='=>'D' ,'v.approved_status'=>1));
				if (!empty($search)) {
		 			if($search == 'Approved' || $search == 'approved'){
						$this->db->like('v.approved_status', 1, 'both');
		 			}else if($search == 'Not Approved' || $search == 'not approved' || $search == 'not'){
		 				$this->db->like('v.approved_status', 0, 'both');
		 			} else {
		 				$this->db->group_start();
		 				$this->db->like('v.email', $search, 'both');
		 				$this->db->or_like('v.company_name', $search, 'both');
		 				$this->db->or_like('se_pack.service_plan', $search, 'both');
		 				$this->db->group_end();
		 			}
				}
				$this->db->group_by('v.id');
				$this->db->order_by('v.id','DESC');
				$this->db->limit($limit,$offset);
				$query = $this->db->get();
				
		        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
		        $data['total_count'] = $countQuery->row()->Count;
		        $data['fetch_count'] = $query->num_rows();
		        $data['fetch_data']  = $query->result_array();
		        foreach ($data['fetch_data'] as $key => $value) {
	        		$data['fetch_data'][$key]['sl_no'] = $key+1;
	        	}
		        return $data;
	    	}
	
	}
	
	public function getRejectVendorDetails($limit = 10, $offset = 0, $search=''){
		$this->db->select("c_per.company_id");
		$this->db->from('company_permission_tbl c_per');
		$this->db->where(array('c_per.admin_user_id' => $_SESSION['adminsessiondetails']['id']));
		$query = $this->db->get();
        $data  = $query->result_array();
		if(!empty($data) && $_SESSION['adminsessiondetails']['id'] != 1){
			$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at, IF(v.status = 'A','Active','Inactive') AS `status`, v.featured_company, v.id,IF(v.approved_status = '1','Approved','Not Approved') AS `approved_status`,v.password,v.decript_password,v.autogorilla_verified",FALSE);
			$this->db->from('vendor_info v');
			$this->db->join('company_permission_tbl c_p','c_p.company_id = v.id','left');
			$this->db->where(array('v.status !='=>'D','v.approved_status'=>2, 'c_p.admin_user_id'=>$_SESSION['adminsessiondetails']['id']));
			if (!empty($search)) {
				$this->db->group_start();
	 			$this->db->like('v.email', $search, 'both');
	 			$this->db->or_like('v.company_name', $search, 'both');
	 			$this->db->group_end();
			}
			$this->db->order_by('v.id','DESC');
			$this->db->limit($limit,$offset);
			$query = $this->db->get();
		
	        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
	        $data['total_count'] = $countQuery->row()->Count;
	        $data['fetch_count'] = $query->num_rows();
	        $data['fetch_data']  = $query->result_array();
	        foreach ($data['fetch_data'] as $key => $value) {
	        	$data['fetch_data'][$key]['sl_no'] = $key+1;
	        }
	        return $data;
	    } else {
	    	$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at,v.autogorilla_verified, IF(v.status = 'A','Active','Inactive') AS `status`, v.featured_company, v.id,IF(v.approved_status = '1','Approved','Not Approved') AS `approved_status`,v.password,v.decript_password",FALSE);
			$this->db->from('vendor_info v');
			$this->db->where(array('v.status !='=>'D' ,'v.approved_status'=>2));
			if (!empty($search)) {
				$this->db->group_start();
	 			$this->db->like('v.email', $search, 'both');
	 			$this->db->or_like('v.company_name', $search, 'both');
	 			$this->db->group_end();
			}
			$this->db->order_by('v.id','DESC');
			$this->db->limit($limit,$offset);
			$query = $this->db->get();
		
	        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
	        $data['total_count'] = $countQuery->row()->Count;
	        $data['fetch_count'] = $query->num_rows();
	        $data['fetch_data']  = $query->result_array();
	        foreach ($data['fetch_data'] as $key => $value) {
	        	$data['fetch_data'][$key]['sl_no'] = $key+1;
	        }
	        return $data;
	    }
	}

	public function changeStatus($data) {
		$sql = "UPDATE vendor_info SET status = ( CASE WHEN STATUS = 'A' THEN 'I' ELSE 'A' END ) WHERE id = ?";
		$query = $this->db->query($sql, array(base64_decode($data['vendor_id'])));
		return $query;
	}

	public function isActiveMailId($email){
		$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.email' => $email,'v.status'=>'A','v.approved_status' => 1));
		$query = $this->db->get();
        $data  = $query->result_array();
        return $data;
	}

	public function changeApprovedStatus($data){
		$sql = "UPDATE vendor_info SET approved_status = ( CASE WHEN APPROVED_STATUS = '1' THEN '0' ELSE '1' END ) WHERE id = ?";
		$query = $this->db->query($sql, array(base64_decode($data['vendor_id'])));
		return $query;
	}

	public function deleteVendor($data){
		$sql = "UPDATE vendor_info SET status ='D' WHERE id = ?";
		$query = $this->db->query($sql, array(base64_decode($data['vendor_id'])));
		return $query;
	}

	public function rejectStatus($data){
		$sql = "UPDATE vendor_info SET approved_status = 2 WHERE id = ?";
		$query = $this->db->query($sql, array(base64_decode($data['vendor_id'])));
		return $query;
	}

	public function getpendingVendorDetails($limit = 10, $offset = 0, $search=''){
		$this->db->select("c_per.company_id");
		$this->db->from('company_permission_tbl c_per');
		$this->db->where(array('c_per.admin_user_id' => $_SESSION['adminsessiondetails']['id']));
		$query = $this->db->get();
        $data  = $query->result_array();
        if(!empty($data) && $_SESSION['adminsessiondetails']['id'] != 1){
			$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at, IF(v.status = 'A','Active','Inactive') AS `status`,v.id,CASE WHEN v.approved_status = '1' THEN 'Approved' WHEN v.approved_status = '2' THEN 'Reject' ELSE 'Not Approved' END AS `approved_status`, v.password, v.featured_company, v.decript_password,round(AVG(coalesce(v_sc.total_score,0))) as cat_avscore,group_concat(distinct(se_pack.service_plan)) as service_plan ",FALSE);
			$this->db->from('vendor_info v');
			$this->db->join('vendor_product_score_table v_sc','v_sc.vendor_id=v.id','left');
			$this->db->join('vendor_service_package_list v_service_p','(v_service_p.vendor_id = v.id AND v_service_p.status = "A")','left');
			$this->db->join('service_package se_pack','se_pack.id = v_service_p.service_package_id','left');

			$this->db->join('company_permission_tbl c_p','c_p.company_id = v.id','left');
			$this->db->where(array('v.status !='=>'D','v.approved_status'=>0, 'v.otp_varify'=>1 ,'c_p.admin_user_id'=>$_SESSION['adminsessiondetails']['id']));
			
			if (!empty($search)) {
	 			if($search == 'Approved' || $search == 'approved'){
					$this->db->like('v.approved_status', 1, 'both');
	 			}else if($search == 'Not Approved' || $search == 'not approved' || $search == 'not'){
	 				$this->db->like('v.approved_status', 0, 'both');
	 			} else {
	 				$this->db->group_start();
	 				$this->db->like('v.email', $search, 'both');
	 				$this->db->or_like('v.company_name', $search, 'both');
	 				$this->db->group_end();
	 			}
			}
			$this->db->group_by('v.id');
			$this->db->order_by('v.id','DESC');
			$this->db->limit($limit,$offset);
			$query = $this->db->get();
		
	        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
	        $data['total_count'] = $countQuery->row()->Count;
	        $data['fetch_count'] = $query->num_rows();
	        $data['fetch_data']  = $query->result_array();
	        foreach ($data['fetch_data'] as $key => $value) {
	        	$data['fetch_data'][$key]['sl_no'] = $key+1;
	        }
	        return $data;
	    } else {
	    	$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at, IF(v.status = 'A','Active','Inactive') AS `status`,v.id,CASE WHEN v.approved_status = '1' THEN 'Approved' WHEN v.approved_status = '2' THEN 'Reject' ELSE 'Not Approved' END AS `approved_status`, v.password, v.featured_company, v.decript_password,round(AVG(coalesce(v_sc.total_score,0))) as cat_avscore,group_concat(distinct(se_pack.service_plan)) as service_plan ",FALSE);
			$this->db->from('vendor_info v');
			$this->db->join('vendor_product_score_table v_sc','v_sc.vendor_id=v.id','left');
			$this->db->join('vendor_service_package_list v_service_p','(v_service_p.vendor_id = v.id AND v_service_p.status = "A")','left');
			$this->db->join('service_package se_pack','se_pack.id = v_service_p.service_package_id','left');
			$this->db->where(array('v.status !='=>'D' ,'v.approved_status'=>0 , 'v.otp_varify'=>1 ));
			if (!empty($search)) {
	 			
	 			if($search == 'Approved' || $search == 'approved'){
					$this->db->like('v.approved_status', 1, 'both');
	 			}else if($search == 'Not Approved' || $search == 'not approved' || $search == 'not'){
	 				$this->db->like('v.approved_status', 0, 'both');
	 			} else {
	 				$this->db->group_start();
	 				$this->db->like('v.email', $search, 'both');
	 				$this->db->or_like('v.company_name', $search, 'both');
	 				$this->db->group_end();
	 			}
			}
			$this->db->group_by('v.id');
			$this->db->order_by('v.id','DESC');
			$this->db->limit($limit,$offset);
			$query = $this->db->get();
		
	        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
	        $data['total_count'] = $countQuery->row()->Count;
	        $data['fetch_count'] = $query->num_rows();
	        $data['fetch_data']  = $query->result_array();
	        foreach ($data['fetch_data'] as $key => $value) {
	        	$data['fetch_data'][$key]['sl_no'] = $key+1;
	        }
	        return $data;
	    }
	}
	
	public function profileCheckBy($data){
		$profile_check = $data['profile_check'];
		$sql = "UPDATE vendor_info SET profile_check_by = '".$profile_check."' WHERE id = ?";
		$query = $this->db->query($sql, array($data['id']));
		return $query;
	}

	public function changefeatureStatus($data){
		$sql = "UPDATE vendor_info SET featured_company = ( CASE WHEN featured_company = '0' THEN 1 ELSE 0 END ) WHERE id = ?";
		$query = $this->db->query($sql, array(base64_decode($data['vendor_id'])));
		return $query;
	}

	public function fetchVendorName(){
		$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.id",FALSE);
		$this->db->from('vendor_info v');
		$this->db->where(array('v.status'=>'A'));
		$this->db->group_by('v.id');
		$this->db->order_by('v.name','ASC');
		$query = $this->db->get();
		$data  = $query->result_array();
        return $data;
	}

	public function uploadData($table, $post_data=array()){
        $this->db->insert_batch($table,$post_data);
		// $insertId = $this->db->insert_id();
		// return $insertId;
    }

    public function getRejectedCompanyReport($limit = 10, $offset = 0, $search='',$uniq_code=''){
    	$this->db->select("SQL_CALC_FOUND_ROWS v.name, v.vendor_catalog_url_slug, v.company_name, v.email, date_format(v.created_at,'%d-%m-%y %h:%i:%s %p') as created_at, v.phone ,v.rejected_reason, v.featured_company,v.csv_row_no , v.decript_password",FALSE);
		$this->db->from('vendor_rejeted_datalog v');
		$this->db->where(array('v.uniq_code'=>base64_decode($uniq_code)));
		if (!empty($search)) {
 			$this->db->group_start();
 			$this->db->like('v.email', $search, 'both');
 			$this->db->or_like('v.company_name', $search, 'both');
 			$this->db->or_like('v.phone', $search, 'both');
 			$this->db->group_end();
 			
		}
		$this->db->group_by('v.id');
		$this->db->order_by('v.id','DESC');
		$this->db->limit($limit,$offset);
		$query = $this->db->get();
	
        $countQuery 		 = $this->db->query('SELECT FOUND_ROWS() AS `Count`');
        $data['total_count'] = $countQuery->row()->Count;
        $data['fetch_count'] = $query->num_rows();
        $data['fetch_data']  = $query->result_array();
        return $data;
    }


    public function exportVendorDetails()
    {
    	$this->db->select("v.id,v.company_name,v.name");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.status'=>'A'));
		$query = $this->db->get();
		$data  = $query->result_array();
        return $data;
    }

    public function getSuccessCsvInfo($uniq_code){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.uniq_code'=>base64_decode($uniq_code)));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }
    public function getFailedCsvInfo($uniq_code){
    	$this->db->select("v.id");
		$this->db->from('vendor_rejeted_datalog v');
		$this->db->where(array('v.uniq_code'=>base64_decode($uniq_code)));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    } 
    public function checkIsEmailExist($email){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.email'=>$email));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }
    public function checkIsPhoneExist($phone){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.phone'=>$phone));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }
    public function checkIsCatelogUrlExist($catlogeUrl){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.vendor_catalog_url_slug' => $catlogeUrl));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    } 
    public function checkIsGSTExist($gst){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.gst' => $gst));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    } 
    public function checkIsTANExist($tan){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.tan' => $tan));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }
    public function checkIsPANExist($pan){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.pan' => $pan));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }

    public function rejectedAllPendingSupplier(){
    	$sql = "UPDATE vendor_info SET approved_status = 2 WHERE approved_status = ?";
		$query = $this->db->query($sql, 0);
		return $query;
    }  

    public function rejectedAllApprovedSupplier(){
    	$sql = "UPDATE vendor_info SET approved_status = 2 WHERE approved_status = ?";
		$query = $this->db->query($sql, 1);
		return $query;
    } 

    public function approvedAllPendingSupplier(){
    	$sql = "UPDATE vendor_info SET approved_status = 1 WHERE approved_status = ?";
		$query = $this->db->query($sql, 0);
		return $query;
    } 

    public function approvedAllRejectedSupplier(){
    	$sql = "UPDATE vendor_info SET approved_status = 1 WHERE approved_status = ?";
		$query = $this->db->query($sql, 2);
		return $query;
    }

    public function existPendingData(){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.approved_status' => 0));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }

    public function existRejectData(){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.approved_status' => 2));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }
    public function existApproveData(){
    	$this->db->select("v.id");
		$this->db->from('vendor_info v');
		$this->db->where(array('v.approved_status' => 1));
		$query = $this->db->get();
		$data  = $query->num_rows();
        return $data;
    }

    public function allApprovedSupplierInfo(){
    	$sql = "UPDATE vendor_info SET approved_status = 1 WHERE status = ?";
		$query = $this->db->query($sql, 'A');
		return $query;
    }
    public function rejectAllSupplierInfo(){
    	$sql = "UPDATE vendor_info SET approved_status = 2 WHERE status = ?";
    	$query = $this->db->query($sql, 'A');
		return $query;
    }

    public function fetchSubscriptionListById($data){
    	$this->db->select("v_service_p.id,v_service_p.service_package_id, date_format(v_service_p.package_start_date,'%d-%m-%Y') as package_start_date,v_service_p.vendor_id,date_format(v_service_p.package_expiry_date,'%d-%m-%Y') as package_expiry_date, s_p.service_plan,v_service_p.total_date_calculate,v_service_p.total_calculate_days");
		$this->db->from('vendor_service_package_list v_service_p');
		$this->db->join('service_package s_p','s_p.id = v_service_p.service_package_id','left');
		$this->db->where(array('v_service_p.vendor_id'=>base64_decode($data['vendor_id']),'v_service_p.status' => 'A','s_p.status'=>'A'));
		$this->db->group_by('v_service_p.service_package_id');
		$query = $this->db->get();
		$data  = $query->num_rows();
		$res   = $query->result_array();
        return $res;
    }

}

/* End of file SupplierModel.php */
/* Location: ./application/models/SupplierModel.php */